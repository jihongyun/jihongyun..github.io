{"meta":{"title":"鸿运的博客","subtitle":"鸿运的小屋","description":"技术学习","author":"Bill","url":"http://yoursite.com"},"pages":[{"title":"","date":"2018-11-05T08:42:56.056Z","updated":"2018-11-05T08:42:56.056Z","comments":true,"path":"image/markdown.html","permalink":"http://yoursite.com/image/markdown.html","excerpt":"","text":""},{"title":"404","date":"2018-11-05T12:48:23.000Z","updated":"2018-11-05T12:48:23.978Z","comments":true,"path":"404/index.html","permalink":"http://yoursite.com/404/index.html","excerpt":"","text":""},{"title":"about","date":"2018-11-05T05:22:26.000Z","updated":"2018-11-05T05:23:29.701Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2018-11-05T09:50:53.000Z","updated":"2018-11-05T09:51:28.978Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"search","date":"2018-11-05T12:48:10.000Z","updated":"2018-11-05T12:48:10.833Z","comments":true,"path":"search/index.html","permalink":"http://yoursite.com/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-11-05T05:18:17.000Z","updated":"2018-11-05T08:41:36.830Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2018-11-05T01:36:07.114Z","updated":"2018-11-05T01:36:07.114Z","comments":true,"path":"image/MySQL的部署.html","permalink":"http://yoursite.com/image/MySQL的部署.html","excerpt":"","text":"阿里云服务系统：centOS7一、使用root登陆服务器为了避免不必要的踩坑，直接先更新一下系统。1执行命令：yum -y update 等待出现：123 grub2.x86_64 1:2.02-0.64.el7.centos grub2-tools.x86_64 1:2.02-0.64.el7.centosComplete! 二、重启服务器1执行命令：init 6 三、先检查一下自己是否装了MySQL数据库，如果已经装了将其删除，避免后续不必要的麻烦。1检查命令： rpm -qa | grep mysql 1卸载命令： yum –y remove mysql 四、下载MySQL安装包执行命令：（两个不同的版本自行选择）1rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm 1rpm -ivh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm 等待下载 五、安装MySQL1执行命令：yum install -y mysql-server 等待出现Complete！ 六、开启服务执行命令：systemctl start mysqld.service 七、查看MySQL默认的密码1执行命令：grep &apos;temporary password&apos; /var/log/mysqld.log 第一次装，应该是没有的（我的是没有的）。 八、登录MySQL1.上一步没有获取到密码。1执行命令：mysql -uroot -p 如果输入密码直接回车。 2.上一步获取到密码。例如密码为：password1执行命令：mysql -uroot -ppassword 九、进入MySQL系统，修改掉当前用户的密码。例如：修改密码为”Abc123!_“。1执行命令：SET PASSWORD = PASSWORD(&apos;Abc123!_&apos;); 搞了这么多不就是想远程登录。激动人心的时候到了。 十、开启远程登录，授权root远程登录。1执行命令：GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;Abc123!_&apos; WITH GRANT OPTION; 为了将授权立即生效：1执行命令：flush privileges; 好了centOS7上面的MySQL已经部署好了，下一步我们就通过Navicat连接。"}],"posts":[{"title":"spring面试题","slug":"面试题","date":"2018-11-07T01:52:00.141Z","updated":"2018-11-07T14:38:59.069Z","comments":true,"path":"2018/11/07/面试题/","link":"","permalink":"http://yoursite.com/2018/11/07/面试题/","excerpt":"","text":"ioc是什么？ioc:spring框架核心技术，控制反转与依赖注入。控制反转：应用程序创建对象过程转交给外部容器ioc来负责创建。可以使用xml配置。举例：对象的获取操作。原始是需要new一个对象。ioc：通过xml配置bean标签，或者注解+扫描器（controller，service，respository,component）依赖注入（也叫装配）：给对象属性赋值。举例：传统方式：获取UserService类需要new UserService（）；依赖注入：1.扫描+标签。（resource或aotuwired）2.通过set或构造器注入。ioc实现设计的相关技术：工厂模式、单例模式、反射、xml解析。ioc的优点：耦合度降低，代码入侵性低邮件服务定时任务信息服务 aop实现方式与应用场景实现方式：1.静态代理。2.动态代理：1.jdk 2.cglib控制场景：aop实现资源的权限控制，用户行为日志收集，系统操作收集，非法资源控制。优点：1.降低模块与模块之间的耦合度，提高业务代码的耦合度。2.提高代码的复用性。3.提高系统的扩展性。","categories":[{"name":"面试题","slug":"面试题","permalink":"http://yoursite.com/categories/面试题/"}],"tags":[]},{"title":"RPC基本概念","slug":"Apache Dubbo-RPC基本概念","date":"2018-11-06T14:53:33.288Z","updated":"2018-11-06T14:53:33.511Z","comments":true,"path":"2018/11/06/Apache Dubbo-RPC基本概念/","link":"","permalink":"http://yoursite.com/2018/11/06/Apache Dubbo-RPC基本概念/","excerpt":"","text":"RPC协议远程过程调用协议，属于一种规范，RPC跨越了传输层和应用层。采用客户机/服务器模式。请求程序就是一个客户机，而服务提供程序就是一个服务器优点：使开发包括网络分布式程序在内的应用程序更加容易。 RPC框架进程间通信（IPC）：是在多任务操作系统或联网的计算机之间运行的程序和进程所用的通信技术。有两种类型的进程间通信（IPC）。本地过程调用（LPC）：LPC用在多任务操作系统中，使得同时运行的任务能互相会话。这些任务共享内存空间使任务同步和互相发送信息。远程过程调用（RPC）：Unix的生态系统中 RPC 可以在同一台电脑上不同进程进行，也可以在不同电脑上进行。PRC实现了不同。综上：RPC 或 LPC是上层建筑，IPC 是底层基础。RPC 框架有很多：比如 Thrift、dubbo、grpc 等。 RPC 与 HTTP、TCP、UDP、Socket 的区别 TCP/UDP: 都是传输协议，主要区别是 tcp 协议连接需要 3 次握手，断开需要四次挥手，是通过流来传输的，就是确定连接后，一直发送信息，传完后断开。udp 不需要进行连接，直接把信息封装成多个报文，直接发送。所以 udp 的速度更快写，但是不保证数据的完整性。 Http：超文本传输协议是一种应用层协议，建立在 TCP 协议之上 Socket：是在应用程序层面上对 TCP/IP 协议的封装和应用。 RPC 是一种通过网络从远程计算机程序上请求服务，而不需要了解底层网络技术的协议。所以 RPC 的实现可以通过不同的协议去实现比如可以使 http、RMI 等。 RPC 的运行流程","categories":[{"name":"Apache Dubbo","slug":"Apache-Dubbo","permalink":"http://yoursite.com/categories/Apache-Dubbo/"}],"tags":[]},{"title":"Apache Dubbo","slug":"Dubbo","date":"2018-11-06T01:40:13.178Z","updated":"2018-11-06T14:53:43.741Z","comments":true,"path":"2018/11/06/Dubbo/","link":"","permalink":"http://yoursite.com/2018/11/06/Dubbo/","excerpt":"","text":"Dubbo是一款高性能的javaRPC框架，它提供三大核心能力：面向接口的远程调用方法，智能容错和负载均衡，以及服务自动注册和发现。 Dubbo流程图 0-start 初始化在IOC容器启动时，对服务实现类实例化。 1-register 服务注册操作将服务的提供方信息写入到注册中心。 2-subscribe订阅服务消费者启动时，订阅注册信息的服务列表信息。 3-notify消息的通知服务变更时，注册中心推送变更消息到消费者。 4-invoke 远程的调用更具订阅的信息发起远程调用（同步操作会有阻塞情况的发生。） 5-conut 监控中心监控程序快速搭建一个简单的dubbo环境创建maven项目项目结构如图： 在dubbo_par中引入dubbo坐标12345&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;dubbo&lt;/artifactId&gt; &lt;version&gt;2.5.6&lt;/version&gt;&lt;/dependency&gt; dubbo_api中编写po类和接口User消费者对象123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960package com.jihongyun.po;import java.io.Serializable;/** * Created by xlf on 2018/11/6. */public class User implements Serializable &#123; private static final long serialVersionUID = -1624346152087608103L; private Integer id; private String userName; private String userPwd; public User() &#123; &#125; public User(Integer id, String userName, String userPwd) &#123; this.id = id; this.userName = userName; this.userPwd = userPwd; &#125; public static long getSerialVersionUID() &#123; return serialVersionUID; &#125; public Integer getId() &#123; return id; &#125; public void setId(Integer id) &#123; this.id = id; &#125; public String getUserName() &#123; return userName; &#125; public void setUserName(String userName) &#123; this.userName = userName; &#125; public String getUserPwd() &#123; return userPwd; &#125; public void setUserPwd(String userPwd) &#123; this.userPwd = userPwd; &#125; @Override public String toString() &#123; return &quot;User&#123;&quot; + &quot;id=&quot; + id + &quot;, userName=&apos;&quot; + userName + &apos;\\&apos;&apos; + &quot;, userPwd=&apos;&quot; + userPwd + &apos;\\&apos;&apos; + &apos;&#125;&apos;; &#125;&#125; 定义接口及方法12345678910package com.jihongyun.service;import com.jihongyun.po.User;/** * Created by xlf on 2018/11/6. */public interface IUserService &#123; public User queryUserById(Integer userId);&#125; dubbo_provider服务端的构建加入坐标继承dubbo_api12345&lt;dependency&gt; &lt;groupId&gt;com.jihongyun&lt;/groupId&gt; &lt;artifactId&gt;dubbo_api&lt;/artifactId&gt; &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;&lt;/dependency&gt; 创建实现接口IUserService的UserServiceImpl类123456789101112131415161718192021222324252627package com.jihongyun.provider;import com.jihongyun.po.User;import com.jihongyun.service.IUserService;import org.springframework.stereotype.Repository;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.Map;/** * Created by xlf on 2018/11/6. */@Servicepublic class UserServiceImpl implements IUserService &#123; //没有连接数据库所有直接写入user用户 private Map&lt;Integer, User&gt; users = new HashMap&lt;&gt;(); public UserServiceImpl() &#123; users.put(1,new User(1,&quot;bill&quot;,&quot;123456&quot;)); &#125; @Override public User queryUserById(Integer userId) &#123; return users.get(userId); &#125;&#125; provider.xml配置(spring.xml)1234567891011121314151617181920212223&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;context:component-scan base-package=&quot;com.jihongyun.provider&quot;/&gt; &lt;!--dubbo环境的配置--&gt; &lt;!--应用名称--&gt; &lt;dubbo:application name=&quot;dubbo_provider&quot;/&gt; &lt;!--注册中心配置--&gt; &lt;dubbo:registry address=&quot;multicast://224.5.6.7:1234&quot;/&gt; &lt;!--指定公布的服务使用的协议和端口号--&gt; &lt;dubbo:protocol name=&quot;dubbo&quot; port=&quot;20880&quot;/&gt; &lt;!--配置公布的服务--&gt; &lt;dubbo:service interface=&quot;com.jihongyun.service.IUserService&quot; ref=&quot;userServiceImpl&quot;/&gt;&lt;/beans&gt; 服务器发布1234567891011121314151617package com.jihongyun;import org.springframework.context.support.ClassPathXmlApplicationContext;import java.io.IOException;/** * Created by xlf on 2018/11/6. */public class Publisher &#123; public static void main(String[] args) throws IOException &#123; ClassPathXmlApplicationContext classPathXmlApplicationContext = new ClassPathXmlApplicationContext(&quot;provider.xml&quot;); classPathXmlApplicationContext.start();//实例化类，将实例化后的类放入容器中。 System.out.println(&quot;服务发布成功！！！&quot;); System.in.read(); &#125;&#125; 搭建dubbo_consumer消费端调用类1234567891011121314151617181920package com.jihongyun.consumer.controller;import com.jihongyun.po.User;import com.jihongyun.service.IUserService;import jdk.nashorn.internal.ir.ReturnNode;import org.springframework.stereotype.Controller;import javax.annotation.Resource;/** * Created by xlf on 2018/11/6. */@Controllerpublic class UserController &#123; @Resource private IUserService userService; public User queryUserByUserId(Integer userId)&#123; return userService.queryUserById(userId); &#125;&#125; consumer.xml配置12345678910111213141516171819202122&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns:dubbo=&quot;http://code.alibabatech.com/schema/dubbo&quot; xmlns:context=&quot;http://www.springframework.org/schema/context&quot; xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://code.alibabatech.com/schema/dubbo http://code.alibabatech.com/schema/dubbo/dubbo.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd&quot;&gt; &lt;context:component-scan base-package=&quot;com.jihongyun.consumer.controller&quot;/&gt; &lt;!--dubbo环境配置--&gt; &lt;dubbo:application name=&quot;dubbo_consumer&quot;/&gt; &lt;!--指定注册中心--&gt; &lt;dubbo:registry address=&quot;multicast://224.5.6.7:1234&quot;/&gt; &lt;!--配置订阅服务--&gt; &lt;dubbo:reference id=&quot;userService&quot; interface=&quot;com.jihongyun.service.IUserService&quot;/&gt;&lt;/beans&gt; 消费端测试类123456789101112131415package com.jihongyun.consumer;import com.jihongyun.consumer.controller.UserController;import org.springframework.context.support.ClassPathXmlApplicationContext;/** * Created by xlf on 2018/11/6. */public class TestConsumer &#123; public static void main(String[] args) &#123; ClassPathXmlApplicationContext classPathXmlApplicationContext = new ClassPathXmlApplicationContext(&quot;consumer.xml&quot;); UserController userController = (UserController) classPathXmlApplicationContext.getBean(&quot;userController&quot;); System.out.println(userController.queryUserByUserId(1)); &#125;&#125;","categories":[{"name":"Apache Dubbo","slug":"Apache-Dubbo","permalink":"http://yoursite.com/categories/Apache-Dubbo/"}],"tags":[]},{"title":"阿里云服务系统：centOS7部署MySQL","slug":"MySQL的部署","date":"2018-11-05T08:16:32.530Z","updated":"2018-11-06T14:55:17.262Z","comments":true,"path":"2018/11/05/MySQL的部署/","link":"","permalink":"http://yoursite.com/2018/11/05/MySQL的部署/","excerpt":"","text":"阿里云服务系统：centOS7部署MySQL一、使用root登陆服务器为了避免不必要的踩坑，直接先更新一下系统。1执行命令：yum -y update 等待出现：123 grub2.x86_64 1:2.02-0.64.el7.centos grub2-tools.x86_64 1:2.02-0.64.el7.centosComplete! 二、重启服务器1执行命令：init 6 三、先检查一下自己是否装了MySQL数据库，如果已经装了将其删除，避免后续不必要的麻烦。1检查命令： rpm -qa | grep mysql 1卸载命令： yum –y remove mysql 四、下载MySQL安装包执行命令：（两个不同的版本自行选择）1rpm -ivh http://dev.mysql.com/get/mysql57-community-release-el7-8.noarch.rpm 1rpm -ivh http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm 等待下载 五、安装MySQL1执行命令：yum install -y mysql-server 等待出现Complete！ 六、开启服务执行命令：systemctl start mysqld.service 七、查看MySQL默认的密码1执行命令：grep &apos;temporary password&apos; /var/log/mysqld.log 第一次装，应该是没有的（我的是没有的）。 八、登录MySQL1.上一步没有获取到密码。1执行命令：mysql -uroot -p 如果输入密码直接回车。 2.上一步获取到密码。例如密码为：password1执行命令：mysql -uroot -ppassword 九、进入MySQL系统，修改掉当前用户的密码。例如：修改密码为”Abc123!_“。1执行命令：SET PASSWORD = PASSWORD(&apos;Abc123!_&apos;); 搞了这么多不就是想远程登录。激动人心的时候到了。 十、开启远程登录，授权root远程登录。1执行命令：GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;%&apos; IDENTIFIED BY &apos;Abc123!_&apos; WITH GRANT OPTION; 为了将授权立即生效：1执行命令：flush privileges; 好了centOS7上面的MySQL已经部署好了，下一步我们就通过Navicat连接。","categories":[{"name":"项目的简单部署","slug":"项目的简单部署","permalink":"http://yoursite.com/categories/项目的简单部署/"}],"tags":[]}]}